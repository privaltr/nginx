# Root CA Secret
apiVersion: v1
kind: Secret
metadata:
  name: root-cert
  namespace: app-test-1
  annotations:
    avp.kubernetes.io/path: "secret/data/tls/root-cert"
type: kubernetes.io/tls
stringData:
  tls.crt: |
    <tls.crt>
  tls.key: |
    <tls.key>
---
# Issuer
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: ca-issuer
  namespace: app-test-1
spec:
  ca:
    secretName: root-cert
---
# Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tls-certificate
  namespace: app-test-1
spec:
  secretName: app-test-1-https-cert
  dnsNames:
    - app-test-1.local-cluster.dev
  privateKey:
    rotationPolicy: Always
  issuerRef:
    name: ca-issuer
    kind: Issuer
---
# Service for Mailcow Nginx
apiVersion: v1
kind: Service
metadata:
  name: mailcow-nginx
  namespace: app-test-1
  labels:
    app: mailcow-nginx
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
  selector:
    app: mailcow-nginx
---
# Deployment for Mailcow Nginx
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailcow-nginx
  namespace: app-test-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailcow-nginx
  template:
    metadata:
      labels:
        app: mailcow-nginx
    spec:
      containers:
        - name: nginx
          image: mailcow/nginx:1.02
          ports:
            - containerPort: 80
            - containerPort: 443
---
# Ingress (HTTPProxy) for Mailcow
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: mailcow
  namespace: app-test-1
spec:
  virtualhost:
    fqdn: app-test-1.local-cluster.dev
    tls:
      secretName: app-test-1-https-cert
  routes:
    - conditions:
      - prefix: /
      services:
        - name: mailcow-nginx
          port: 80
---
# Service for Mailcow Postfix
apiVersion: v1
kind: Service
metadata:
  name: mailcow-postfix
  namespace: app-test-1
spec:
  ports:
    - name: smtp
      port: 25
      targetPort: 25
  selector:
    app: mailcow-postfix
---
# Deployment for Mailcow Postfix
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailcow-postfix
  namespace: app-test-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailcow-postfix
  template:
    metadata:
      labels:
        app: mailcow-postfix
    spec:
      containers:
        - name: postfix
          image: mailcow/postfix:1.79
          ports:
            - containerPort: 25
---
# Service for Mailcow Dovecot
apiVersion: v1
kind: Service
metadata:
  name: mailcow-dovecot
  namespace: app-test-1
spec:
  ports:
    - name: imap
      port: 143
      targetPort: 143
    - name: imaps
      port: 993
      targetPort: 993
  selector:
    app: mailcow-dovecot
---
# Deployment for Mailcow Dovecot
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailcow-dovecot
  namespace: app-test-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailcow-dovecot
  template:
    metadata:
      labels:
        app: mailcow-dovecot
    spec:
      containers:
        - name: dovecot
          image: mailcow/dovecot:2.3
          ports:
            - containerPort: 143
            - containerPort: 993
---
# Persistent storage, config maps, and secrets should be added for full Mailcow functionality

